# Run various code quality checks when pushing to main or when opening pull requests.
# - This will run the tests, as well as
# - Perform an analysis via SonarCloud
# - Examine whether any of the dependencies contain known vulnerabilities

name: Code quality checks

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
#  analyze_sonar:
#    name: Run unit tests and Sonar analysis
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v4
#        with:
#          fetch-depth: 0  # Required for full Sonar analysis
#      - name: Set up JDK 25
#        uses: actions/setup-java@v4
#        with:
#          java-version: 25
#          distribution: 'temurin'
#          cache: gradle
#      - name: Setup Gradle
#        uses: gradle/actions/setup-gradle@v3
#      - name: Cache SonarCloud packages
#        uses: actions/cache@v4
#        with:
#          path: ~/.sonar/cache
#          key: ${{ runner.os }}-sonar
#          restore-keys: ${{ runner.os }}-sonar
#      - name: Analyze code quality
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#        run: |
#          ./gradlew build sonar --no-daemon -Dsonar.projectKey=siemens_cmp-ra-component -DdependencyCheck.skip=true

  analyze_dependencies_owasp:
    name: Check dependencies with OWASP
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up JDK 25
        uses: actions/setup-java@v4
        with:
          java-version: 25
          distribution: 'temurin'
          cache: gradle
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
      - name: Analyze dependencies
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          OSS_INDEX_PASSWORD: ${{ secrets.OSS_INDEX_PASSWORD }}
          OSS_INDEX_USERNAME: ${{ secrets.OSS_INDEX_USERNAME }}
          NVD_TOKEN: ${{ secrets.NVD_TOKEN }}
        run: ./gradlew dependencyCheckAnalyze --no-daemon
